{"version":3,"sources":["components/NavBarElements.jsx","components/Page-1/PrincipalPage.jsx","components/Page-2/AboutMe.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBarElements","react_default","a","createElement","class","react_router_dom","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","React","Component","PrincipalPage","components_NavBarElements","src","AboutMe","App","basename","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sQAgCeA,0LA3BP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,2EACPH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,kCAAiCH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAG,KAArC,OAC1CN,EAAAC,EAAAC,cAAA,UAAQC,MAAM,4BAA4BI,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBAC/JZ,EAAAC,EAAAC,cAAA,QAAMC,MAAM,yBAEhBH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,2BAA2BU,GAAG,aACrCb,EAAAC,EAAAC,cAAA,MAAIC,MAAM,wBACNH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,qFACNH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,YAAWH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAG,UAArC,WAExBN,EAAAC,EAAAC,cAAA,MAAIC,MAAM,qFACNH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,YAAWH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAG,aAArC,cAExBN,EAAAC,EAAAC,cAAA,MAAIC,MAAM,qFACNH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,aAAaH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAG,WAArC,YAE1BN,EAAAC,EAAAC,cAAA,MAAIC,MAAM,qFACNH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,aAAYH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAG,YAArC,uBApBpBQ,IAAMC,YCoBpBC,0LAhBP,OACIhB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACXL,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBAAkBa,IAAI,+DAEzClB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,8BAAd,4DAXIS,IAAMC,YCsBnBI,mLApBP,OACInB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kCACXL,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBAAsBa,IAAI,iEAE7ClB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,yBACXL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,uBAAd,saAXFS,IAAMC,WCmBbK,mLAbX,OACEpB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYiB,SAAS,KACnBrB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACEtB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,IACjChB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWN,cAPhCL,IAAMC,WCKJW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d8cd80b5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass NavBarElements extends React.Component{\r\n    render(){\r\n        return(\r\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light col-lg-12 bg-transparent \">\r\n                <a class=\"navbar-brand col-lg-2 col-sm-2\"><Link className=\"nav-link active\" to=\"/\">MP</Link></a>\r\n                <button class=\"navbar-toggler  col-sm-1 \" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul class=\"navbar-nav col-lg-10\">\r\n                        <li class=\"nav-item navbar-brand col-lg-3 text-center btn btn-link letter border border-dark\">\r\n                            <a class=\"nav-link\"><Link className=\"nav-link active\" to=\"/about\">About</Link></a>\r\n                        </li>\r\n                        <li class=\"nav-item navbar-brand col-lg-3 text-center btn btn-link letter border border-dark\">\r\n                            <a class=\"nav-link\"><Link className=\"nav-link active\" to=\"/projects\">Projects</Link></a>\r\n                        </li>\r\n                        <li class=\"nav-item navbar-brand col-lg-3 text-center btn btn-link letter border border-dark\">\r\n                            <a class=\"nav-link \" ><Link className=\"nav-link active\" to=\"/skills\">Skills</Link></a>\r\n                        </li>\r\n                        <li class=\"nav-item navbar-brand col-lg-3 text-center btn btn-link letter border border-dark\">\r\n                            <a class=\"nav-link \"><Link className=\"nav-link active\" to=\"/contact\" >Contact</Link></a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBarElements","import React from \"react\";\r\nimport NavBarElements from \"../NavBarElements\";\r\nimport \"../Page-1/PrincipalPage.css\"\r\n\r\nclass PrincipalPage extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container col-md-12\" >\r\n                <NavBarElements/>\r\n                <div className=\"row \">\r\n                    <div className=\"col col-lg-4 col-sm-4\">\r\n                        <img className=\"image col-sm-12\" src=\"https://cdn140.picsart.com/268591153011211.png?r1024x1024\" />\r\n                    </div>\r\n                    <div className=\"col col-lg-8 col-sm-8\">\r\n                        <h1 className=\"text-center text col-sm-12\">Hi¡ I'm Angie and i'm a front end developer</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PrincipalPage;","import React from \"react\";\r\nimport NavbarElments from \"../NavBarElements\"\r\n\r\nclass AboutMe extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"contrainer col-lg-12 col-sm-12\">\r\n                <NavbarElments/>\r\n                <div className=\"row\">\r\n                    <div className=\"col col-lg-4 col-sm-4\">\r\n                        <img className=\"col-lg-12 col-sm-12\" src=\"https://avatars2.githubusercontent.com/u/47005893?s=460&v=4\"/>\r\n                    </div>\r\n                    <div className=\"col col-lg-8 col-sm-8\">\r\n                        <h3 className=\"col-lg-12 col-sm-12\"> \r\n                            Hello¡ My name is Angelica Caballero, i live in Guadalajara the land of Tequila and Mariachi.\r\n                            I studying as a Front End Developer at Laboratoria bootcamp. I am passionate about the food process and its analysis, I love acquiring knowledge and sharing it.\r\n                            I am in the tech world because I am curious because few women are invlved in this area. I would love to keep learning more and more about programming.\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\nimport {HashRouter , Route , Switch} from \"react-router-dom\";\n// import NavBarElements from './components/NavBarElements';\nimport \"./styles/App.css\"\nimport PrincipalPage from './components/Page-1/PrincipalPage';\nimport AboutMe from \"./components/Page-2/AboutMe\"\n\nclass App extends React.Component{\n  render(){\n    return(\n      <HashRouter basename=\"/\">\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={PrincipalPage} />\n            <Route exact path=\"/about\" component={AboutMe} />\n          </Switch>\n        </div>\n      </HashRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}